// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: taxas.sql

package db

import (
	"context"
	"database/sql"
)

const createTax = `-- name: CreateTax :exec
INSERT INTO "taxas" (cart_id, value) VALUES ($1, $2) RETURNING id
`

type CreateTaxParams struct {
	CartID sql.NullInt32
	Value  string
}

func (q *Queries) CreateTax(ctx context.Context, arg CreateTaxParams) error {
	_, err := q.db.ExecContext(ctx, createTax, arg.CartID, arg.Value)
	return err
}

const deleteTax = `-- name: DeleteTax :exec
DELETE FROM "taxas" WHERE id = $1
`

func (q *Queries) DeleteTax(ctx context.Context, id int32) error {
	_, err := q.db.ExecContext(ctx, deleteTax, id)
	return err
}

const getTaxByCartID = `-- name: GetTaxByCartID :one
SELECT id, cart_id, descricao, value, created_at FROM "taxas" WHERE cart_id = $1
`

func (q *Queries) GetTaxByCartID(ctx context.Context, cartID sql.NullInt32) (Taxa, error) {
	row := q.db.QueryRowContext(ctx, getTaxByCartID, cartID)
	var i Taxa
	err := row.Scan(
		&i.ID,
		&i.CartID,
		&i.Descricao,
		&i.Value,
		&i.CreatedAt,
	)
	return i, err
}

const updateTax = `-- name: UpdateTax :exec
UPDATE "taxas" SET value = $1 WHERE id = $2
`

type UpdateTaxParams struct {
	Value string
	ID    int32
}

func (q *Queries) UpdateTax(ctx context.Context, arg UpdateTaxParams) error {
	_, err := q.db.ExecContext(ctx, updateTax, arg.Value, arg.ID)
	return err
}
