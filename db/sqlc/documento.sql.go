// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: documento.sql

package db

import (
	"context"
	"database/sql"
)

const createDocument = `-- name: CreateDocument :exec
INSERT INTO "documento" (cliente_id, tipo_documento, numero_documento, cpf) VALUES ($1, $2, $3, $4) RETURNING id
`

type CreateDocumentParams struct {
	ClienteID       sql.NullInt32
	TipoDocumento   string
	NumeroDocumento string
	Cpf             sql.NullString
}

func (q *Queries) CreateDocument(ctx context.Context, arg CreateDocumentParams) error {
	_, err := q.db.ExecContext(ctx, createDocument,
		arg.ClienteID,
		arg.TipoDocumento,
		arg.NumeroDocumento,
		arg.Cpf,
	)
	return err
}

const getDocumentByClientID = `-- name: GetDocumentByClientID :one
SELECT id, cliente_id, tipo_documento, numero_documento, cpf, created_at FROM "documento" WHERE cliente_id = $1
`

func (q *Queries) GetDocumentByClientID(ctx context.Context, clienteID sql.NullInt32) (Documento, error) {
	row := q.db.QueryRowContext(ctx, getDocumentByClientID, clienteID)
	var i Documento
	err := row.Scan(
		&i.ID,
		&i.ClienteID,
		&i.TipoDocumento,
		&i.NumeroDocumento,
		&i.Cpf,
		&i.CreatedAt,
	)
	return i, err
}
